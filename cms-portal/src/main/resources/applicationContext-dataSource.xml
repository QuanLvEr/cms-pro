<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--配置数据源dataSource-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--配置初始大小、范围-->
        <property name="initialSize" value="${datasource.initialSize}"/>
        <property name="minIdle" value="${datasource.minIdle}"/>
        <property name="maxActive" value="${datasource.maxActive}"/>
        <!--配置获取连接等待超时的时间-->
        <property name="maxWait" value="${datasource.maxWait}"/>
        <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒-->
        <property name="timeBetweenConnectErrorMillis" value="${datasource.timeBetweenEvictionRunsMillis}"/>
        <!--配置一个连接在池中最小生存时间，单位毫秒-->
        <property name="minEvictableIdleTimeMillis" value="${datasource.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${datasource.validationQuery}"/>
        <property name="testWhileIdle" value="${datasource.testWhileIdle}"/>
        <property name="testOnBorrow" value="${datasource.testOnBorrow}"/>
        <property name="testOnReturn" value="${datasource.testOnReturn}"/>
        <!--打开PSCache，并指定每个连接上PSCache的大小-->
        <property name="poolPreparedStatements" value="${datasource.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${datasource.maxPoolPreparedStatementPerConnectionSize}"/>
        <!--开启Druid的监控统计功能，StatFilter可以和其它Filter配置使用-->
        <property name="filters" value="${datasource.filters}"/>
        <!--通过connectionProperties属性来打开mergeSql功能；慢SQL记录-->
        <property name="connectionProperties" value="${datasource.connectionProperties}"/>
        <!--合并多个DruidDataSource的监控数据-->
        <property name="useGlobalDataSourceStat" value="${datasource.useGlobalDataSourceStat}"/>
        <!--监控统计拦截的filter-->
        <property name="proxyFilters">
            <list>
                <ref bean="statFilter"/>
            </list>
        </property>
    </bean>

    <!--Spring整合MyBatis关键：sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--引入数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--加载mybatis核心配置文件-->
        <!--<property name="configLocation" value="classpath:SqlMapConfig.xml"/>-->
        <!--DAO层映射配置文件mapper.xml-->
        <property name="mapperLocations">
            <array>
                <value>classpath*:com/cms/dao/mapper/mappers/**.xml</value>
            </array>
        </property>

        <!--配置configuration-->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
                <!--数据库超过25000秒仍未响应则超时-->
                <property name="defaultStatementTimeout" value="25000"/>
                <!--开启缓存支持-->
                <property name="cacheEnabled" value="true"/>
                <!--mybatis中，懒加载必须-->
                <property name="lazyLoadingEnabled" value="true"/>
                <property name="aggressiveLazyLoading" value="false"/>
                <!--可以阻挡不相干的操作触发，实现懒加载-->
                <property name="lazyLoadTriggerMethods" value=""/>
            </bean>
        </property>
    </bean>

    <!--mapper扫描接口，接口代理对象-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cms.dao.mapper"/>
    </bean>

    <!--Spring事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--回滚-->
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>

    <!--配置flyway数据库版本控制-->
    <!--<bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate" depends-on="dataSource">
        <property name="dataSource" ref="dataSource"/>
        &lt;!&ndash;指定迁移目录、默认在resources下&ndash;&gt;
        <property name="locations" value="migration"/>
        &lt;!&ndash;开启迁移&ndash;&gt;
        <property name="baselineOnMigrate" value="true"/>
    </bean>-->

    <!--声明式事务@Transactional注解驱动-->
    <tx:annotation-driven proxy-target-class="true"/>

    <!--慢sql记录-->
    <bean id="statFilter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="mergeSql" value="true"/>
        <property name="slowSqlMillis" value="10000"/>
        <property name="logSlowSql" value="true"/>
    </bean>


</beans>